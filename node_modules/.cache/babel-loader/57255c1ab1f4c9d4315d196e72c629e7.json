{"ast":null,"code":"var _jsxFileName = \"/Users/issoufzabre/workspace/happy-zabre-app/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = e => {\n    e.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmty(enteredName);\n    const enteredStreetIsValid = !isEmty(enteredStreet);\n    const enteredCityIsValid = !isEmty(enteredCity);\n    const enterdPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enterdPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enterdPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return; // submit\n    }\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Ton Non\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Route\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code(5 character long)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Ville\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: props.onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"QVaaeoubr2ns6zZ2+K3ZrZE4UBY=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/issoufzabre/workspace/happy-zabre-app/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","e","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enterdPostalCodeIsValid","formIsValid","nameControlClasses","control","invalid","form","postal","onCancel"],"mappings":"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","sourcesContent":["import {useRef, useState} from 'react';\n\nimport classes from './Checkout.module.css';\n\nconst isEmty = (value) => value.trim() === '';\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n    const [formInputsValidity, setFormInputsValidity] = useState({\n        name: true,\n        street: true,\n        city: true,\n        postalCode: true\n\n    })\n    const nameInputRef = useRef();\n    const streetInputRef = useRef();\n    const postalInputRef = useRef();\n    const cityInputRef = useRef();\n\n    const confirmHandler = (e) => {\n        e.preventDefault();\n\n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredPostalCode = postalInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n\n        const enteredNameIsValid = !isEmty(enteredName);\n        const enteredStreetIsValid = !isEmty(enteredStreet);\n        const enteredCityIsValid = !isEmty(enteredCity)\n        const enterdPostalCodeIsValid = isFiveChars(enteredPostalCode);\n\n        setFormInputsValidity({\n            name: enteredNameIsValid,\n            street: enteredStreetIsValid,\n            city: enteredCityIsValid,\n            postalCode: enterdPostalCodeIsValid \n        });\n\n        const formIsValid =\n            enteredNameIsValid &&\n            enteredStreetIsValid &&\n            enteredCityIsValid &&\n            enterdPostalCodeIsValid;\n\n            if(!formIsValid) {\n                return;\n                // submit\n            }\n    };\n\n    const nameControlClasses = `${classes.control} ${\n        formInputsValidity.name ? '' : classes.invalid\n    }`;\n\n    return (\n        <form className={classes.form} onSubmit={confirmHandler}>  \n            <div\n                className={nameControlClasses}\n                >\n               <label htmlFor='name'>Ton Non</label> \n               <input type='text' id='name' ref={nameInputRef} />\n               {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n\n            </div>\n            <div className={classes.control}>\n                <label htmlFor=\"street\">Route</label>\n                <input type='text' id='street' ref={streetInputRef} />\n                {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n\n            </div>\n            <div className={classes.control}>\n                <label htmlFor=\"postal\">Postal Code</label>\n                <input type='text' id='postal' ref={postalInputRef} />\n                {!formInputsValidity.postal && <p>Please enter a valid postal code(5 character long)!</p>}\n\n            </div>\n            <div className={classes.control}>\n                <label htmlFor=\"postal\">Ville</label>\n                <input type='text' id='city' ref={cityInputRef} />\n                {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n\n            </div>\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n            <button>Confirm</button>\n        </form>\n    )\n}\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}